## Aliases

alias ls='eza --icons --octal-permissions -l --no-permissions'
alias la='eza --icons --octal-permissions -la --no-permissions'
alias grep='grep --color=always -i'
alias cat='bat -p --theme=OneHalfDark'
alias gl='git log --color --graph --pretty=format:"%Cblue%G?%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ch) %C(bold blue)<%an>%Creset" --abbrev-commit'
alias md='mkdir -p'
alias pssh='ssh -o PasswordAuthentication=yes -o PreferredAuthentications=password'
alias ffind='find . -type f -iname "*$1"'
alias dfind='find . -type d -iname "$1"'

{{- if eq .chezmoi.os "darwin" }}
alias dssh='ssh -l abonforti -i ~/.ssh/id_ed25519_dxp'
alias brewup='brew update; brew upgrade; brew cleanup; brew doctor'
alias starthybris="gradle start -x :infrastructure:dev:startNginx"
{{ end }} 
{{- if eq .chezmoi.os "linux" }}
alias ssh='ssh-add ~/.ssh/id_ed25519 && ssh'
alias pwnnet='sudo /bin/sh $HOME/bin/linux_connection_share.sh usb0 wlp4s0'
alias encmount='mkdir /tmp/enc_usb; veracrypt -t -k "" --pim=0 --protect-hidden=no /dev/sda1 /tmp/enc_usb'
alias encdismount='veracrypt -d /dev/sda1; rm -rf /tmp/enc_usb'
{{- end }}

## ENV
export KEYID=0x7F3F35EB80ECF823

[[ ! -d ~/bin ]] || export PATH=$HOME/bin:$PATH
[[ ! -f ~/.zsh_functions ]] || source ~/.zsh_functions

{{- if eq .chezmoi.os "linux" }}
[[ ! -d /snap/bin ]] || export PATH=$PATH:/snap/bin
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
[[ -s "$HOME/.dxp_creds" ]] && source "$HOME/.dxp_creds"

if [[ -f "/opt/homebrew/bin/brew" ]] then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

export HYBRIS_OPT_CONFIG_DIR=$HOME/Development/workspaces/opt-properties/dxp
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1
export PATH="/opt/homebrew/opt/python@3.12/libexec/bin:$PATH"
{{- end}}

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

if [ -d ${ZINIT_HOME} ]; then
  # Initialize
  source "${ZINIT_HOME}/zinit.zsh"

  # Add in zsh plugins
  zinit light zsh-users/zsh-syntax-highlighting
  zinit light zsh-users/zsh-completions
  zinit light zsh-users/zsh-autosuggestions
  zinit light Aloxaf/fzf-tab

  # Snippets
  zinit snippet OMZP::sudo
  zinit snippet OMZP::command-not-found

  # Load completions
  autoload -Uz compinit && compinit
  zinit cdreplay -q

  # Completion styling
  zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
  zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
  zstyle ':completion:*' menu no
  zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
  zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
fi

# Shell integrations
eval "$(fzf --zsh)"

## Lazy loads
{{- if eq .chezmoi.os "darwin" }}

pyenv() {
  eval "$(command pyenv init -)"
  pyenv "$@"
}

lazy_load_nvm() {
  unset -f npm node nvm
  export NVM_DIR=~/.nvm
  [[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh"
  [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
}

npm() {
  lazy_load_nvm
  npm $@
}

node() {
  lazy_load_nvm
  node $@
}

nvm() {
  lazy_load_nvm
  nvm $@
}

export SDKMAN_DIR="$HOME/.sdkman"
sdk() {
  unset -f sdk
  [[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"
  sdk "$@"
}

if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  eval "$(oh-my-posh init zsh --config ~/.omp/config/zen.toml)"
fi
{{- end }}
